# Default values for tycho-api.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: "120569639765.dkr.ecr.eu-central-1.amazonaws.com/tycho-explorer"
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
#   runAsUser: 101
#   runAsGroup: 101
#   fsGroup: 101

securityContext: {}
#   allowPrivilegeEscalation: false
#   runAsNonRoot: true
#   capabilities:
#     drop:
#     - ALL

commonEnv:
  - name: TYCHO_API_KEY
  - name: RUST_LOG
  - name: TVL_THRESHOLD

externalSecrets:
  enabled: true
  # Secrets in the Secret Store
  data: dev/tycho-explorer/env
  secretstore: default

service:
  services:
    ethereum: 
      port: 3001
      externalUrl: tycho-beta.propellerheads.xyz
      specEnv:
        - name: RPC_URL
          value: RPC_URL_ETHEREUM
    base:
      port: 3002
      externalUrl: tycho-base-beta.propellerheads.xyz
      specEnv:
        - name: RPC_URL
          value: RPC_URL_BASE
    unichain:
      port: 3003
      externalUrl: tycho-unichain-beta.propellerheads.xyz
      specEnv:
        - name: RPC_URL
          value: RPC_URL_UNICHAIN

resources:
  requests:
    cpu: 100m
    memory: 256Mi
  limits:
    memory: 512Mi

livenessProbe: {}

readinessProbe: {}

ingress:
  enabled: true
  className: "nginx"
  annotations:
    nginx.ingress.kubernetes.io/ssl-redirect: "true"
    nginx.ingress.kubernetes.io/proxy-read-timeout: "3600"
    nginx.ingress.kubernetes.io/proxy-send-timeout: "3600"
    nginx.ingress.kubernetes.io/enable-websocket: "true"
    nginx.ingress.kubernetes.io/rewrite-target: /ws
  hosts:
    - host: ws.example.com
      paths:
        - service: tycho-api-ethereum
          path: /ws/ethereum(/ws)?$
          port: 3001
        - service: tycho-api-base
          path: /ws/base(/ws)?$
          port: 3002
        - service: tycho-api-unichain
          path: /ws/unichain(/ws)?$
          port: 3003
  tls: []
  #  - secretName: chart-example-tls
  #    hosts:
  #      - chart-example.local

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 3
  targetCPUUtilizationPercentage: 80
  targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity:
  nodeAffinity:
    requiredDuringSchedulingIgnoredDuringExecution:
      nodeSelectorTerms:
        - matchExpressions:
            - key: karpenter.k8s.aws/instance-category
              operator: In
              values:
                - c
            - key: karpenter.sh/capacity-type
              operator: In
              values:
                - spot
